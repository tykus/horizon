// Generated by CoffeeScript 1.6.3
(function() {
  var Admin, ArticleForm, Articles, Enquiries;

  Admin = (function() {
    function Admin() {
      console.log("Admin javascripts loaded");
      if ($("#enquiries").length) {
        new Enquiries;
      }
      if ($("#articles").length) {
        new Articles;
      }
    }

    return Admin;

  })();

  $(function() {
    if ($("#admin").length) {
      return new Admin;
    }
  });

  ArticleForm = (function() {
    function ArticleForm() {
      this.inputTitle = $('input[name=title]');
      this.inputDisabledSlug = $('input[name=slug_disabled]');
      this.inputHiddenSlug = $('input[name=slug]');
      this.articleForm = $('#article-form');
      this.bindEvents();
      this.attachRichTextEditor();
    }

    ArticleForm.prototype.attachRichTextEditor = function() {
      return $('textarea[name=content]').summernote({
        height: 300,
        codemirror: {
          theme: 'monokai'
        }
      });
    };

    ArticleForm.prototype.bindEvents = function() {
      var _this = this;
      this.inputTitle.keyup(function() {
        return _this.updateSlug(_this.inputTitle.val());
      });
      return this.inputTitle.change(function() {
        return _this.updateSlug(_this.inputTitle.val());
      });
    };

    ArticleForm.prototype.updateSlug = function(str) {
      this.inputDisabledSlug.val(this.toSlug(str));
      return this.inputHiddenSlug.val(this.toSlug(str));
    };

    ArticleForm.prototype.toSlug = function(str) {
      var from, i, to, _i, _ref;
      str = str.replace(/^\s+|\s+$/g, "").toLowerCase();
      from = "àáäâèéëêìíïîòóöôùúüûñç·/_,:;";
      to = "aaaaeeeeiiiioooouuuunc------";
      for (i = _i = i, _ref = from.length; i <= _ref ? _i <= _ref : _i >= _ref; i = i <= _ref ? ++_i : --_i) {
        str = str.replace(new RegExp(from.charAt(i), "g"), to.charAt(i));
      }
      return str.replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-");
    };

    return ArticleForm;

  })();

  Articles = (function() {
    function Articles() {
      this.allCheckboxes = $("#articles input:checkbox");
      this.checkboxSelectAll = $("#select-all");
      this.buttonDelete = $("#delete-button");
      this.buttonPublish = $("#publish-selected-button");
      this.buttonUnpublish = $("#unpublish-selected-button");
      if ($("#article-form").length) {
        new ArticleForm;
      }
      this.bindEvents();
    }

    Articles.prototype.bindEvents = function() {
      var _this = this;
      this.checkboxSelectAll.click(function() {
        return _this.allCheckboxes.prop('checked', _this.checkboxSelectAll.prop('checked'));
      });
      this.buttonDelete.click(function() {
        return _this.deleteSelected();
      });
      this.buttonPublish.click(function() {
        return _this.publishSelected(true);
      });
      this.buttonUnpublish.click(function() {
        return _this.publishSelected(false);
      });
      return this.allCheckboxes.on('click', function() {
        return _this.checkboxClicked();
      });
    };

    Articles.prototype.deleteSelected = function() {
      var _this = this;
      return this.checkedCheckboxes().each(function(idx, checkbox) {
        var id;
        id = $(checkbox).data('id');
        $(checkbox).closest('tr').fadeOut(500);
        return $.ajax({
          type: "delete",
          url: "/admin/articles/" + id,
          success: function() {
            return console.log("Deleted!");
          },
          error: function() {
            return console.log("Problem :(");
          }
        });
      });
    };

    Articles.prototype.publishSelected = function(publish) {
      var _this = this;
      return this.checkedCheckboxes().each(function(idx, checkbox) {
        var id;
        id = $(checkbox).data('id');
        $.ajax({
          type: "put",
          url: "/admin/articles/publish/" + id,
          data: {
            publish: publish
          },
          success: function(data) {
            var chkbox, row;
            chkbox = $(checkbox);
            chkbox.prop('checked', false);
            row = chkbox.closest('tr');
            row.find('.published_date').html(data.published_date);
            if (publish) {
              return row.removeClass('info');
            } else {
              return row.addClass('info');
            }
          },
          error: function(data) {
            return console.log("An error occurred in the AJAX call");
          }
        });
        return _this.checkboxSelectAll.prop('checked', false);
      });
    };

    Articles.prototype.checkboxClicked = function() {
      if (this.allCheckboxes.not(':checked').length) {
        return this.checkboxSelectAll.prop("checked", false);
      } else {
        return this.checkboxSelectAll.prop("checked", true);
      }
    };

    Articles.prototype.checkedCheckboxes = function() {
      return $("input[name='article[]']:checked");
    };

    Articles.prototype.formatDate = function(date) {
      return date.toISOString().replace(/\..+$|[^\d]/g, '');
    };

    return Articles;

  })();

  Enquiries = (function() {
    function Enquiries() {
      this.allCheckboxes = $("#enquiries input:checkbox");
      this.checkboxSelectAll = $("#select-all");
      this.buttonDelete = $("#delete-button");
      this.buttonMarkAsRead = $("#mark-read-button");
      this.buttonMarkAsUnread = $("#mark-unread-button");
      this.enquiryReplyForm = $("#enquiry-reply-form");
      this.bindEvents();
    }

    Enquiries.prototype.bindEvents = function() {
      var _this = this;
      this.checkboxSelectAll.click(function() {
        return _this.selectAllClicked();
      });
      this.buttonDelete.click(function() {
        return _this.deleteSelected();
      });
      this.buttonMarkAsRead.click(function() {
        return _this.markSelected(true);
      });
      this.buttonMarkAsUnread.click(function() {
        return _this.markSelected(false);
      });
      this.allCheckboxes.click(function() {
        return _this.checkboxClicked();
      });
      return this.enquiryReplyForm.submit(function(e) {
        return _this.sendReply(e);
      });
    };

    Enquiries.prototype.selectAllClicked = function() {
      return this.allCheckboxes.prop('checked', this.checkboxSelectAll.prop('checked'));
    };

    Enquiries.prototype.checkboxClicked = function() {
      if (this.allCheckboxes.not(':checked').length) {
        return this.checkboxSelectAll.prop("checked", false);
      } else {
        return this.checkboxSelectAll.prop("checked", true);
      }
    };

    Enquiries.prototype.selectAllCheckboxes = function() {
      return this.allCheckboxes.prop('checked', true);
    };

    Enquiries.prototype.unselectAllCheckboxes = function() {
      return this.allCheckboxes.prop('checked', false);
    };

    Enquiries.prototype.deleteSelected = function() {
      var _this = this;
      return this.checkedCheckboxes().each(function(idx, checkbox) {
        var id;
        id = $(checkbox).data('id');
        $(checkbox).closest('tr').fadeOut(500);
        return $.ajax({
          type: "delete",
          url: "/admin/enquiries/" + id,
          success: function() {
            return console.log("Deleted!");
          },
          error: function() {
            return console.log("Problem :(");
          }
        });
      });
    };

    Enquiries.prototype.markSelected = function(viewed) {
      var _this = this;
      return this.checkedCheckboxes().each(function(idx, checkbox) {
        var id;
        id = $(checkbox).data('id');
        if (viewed) {
          $(checkbox).closest('tr').removeClass('info');
        } else {
          $(checkbox).closest('tr').addClass('info');
        }
        _this.unselectAllCheckboxes();
        _this.checkboxSelectAll.prop('checked', false);
        return $.ajax({
          type: "put",
          url: "/admin/enquiries/" + id,
          data: {
            viewed: viewed
          },
          success: function(data) {
            return console.log("Success!");
          },
          error: function() {
            return console.log("There was a problem updating the record(s)");
          }
        });
      });
    };

    Enquiries.prototype.checkedCheckboxes = function() {
      return $("input[name='enquiry[]']:checked");
    };

    Enquiries.prototype.sendReply = function(e) {
      var data,
        _this = this;
      this.showSending();
      data = this.enquiryReplyForm.serialize();
      $.ajax({
        type: "POST",
        url: "/admin/enquiries/reply",
        data: data,
        success: function(data) {
          return _this.showSendSuccess();
        }
      });
      return e.preventDefault();
    };

    Enquiries.prototype.showSending = function() {
      var btn;
      btn = this.enquiryReplyForm.find('input:submit');
      return btn.attr('disabled', 'disabled').val("Sending");
    };

    Enquiries.prototype.showSendSuccess = function() {
      var btn;
      btn = this.enquiryReplyForm.find('input:submit');
      return btn.addClass('btn-success').val("Sent!");
    };

    return Enquiries;

  })();

}).call(this);
