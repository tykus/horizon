// Generated by CoffeeScript 1.6.3
(function() {
  var Admin, Enquiries, Faqs, Restfulizer, Settings;

  Admin = (function() {
    function Admin() {
      console.log("Admin javascripts loaded");
      if ($('[data-method=delete]').length) {
        new Restfulizer;
      }
      if ($("#enquiries").length) {
        new Enquiries;
      }
      if ($("#settings").length) {
        new Settings;
      }
      if ($("#faqs").length) {
        new Faqs;
      }
    }

    return Admin;

  })();

  $(function() {
    if ($("#admin").length) {
      return new Admin;
    }
  });

  Enquiries = (function() {
    function Enquiries() {
      this.allCheckboxes = $("#enquiries input:checkbox");
      this.checkboxSelectAll = $("#select-all");
      this.buttonDelete = $("#delete-button");
      this.buttonMarkAsRead = $("#mark-read-button");
      this.buttonMarkAsUnread = $("#mark-unread-button");
      this.enquiryReplyForm = $("#enquiry-reply-form");
      this.bindEvents();
    }

    Enquiries.prototype.bindEvents = function() {
      var _this = this;
      this.checkboxSelectAll.click(function() {
        return _this.selectAllClicked();
      });
      this.buttonDelete.click(function() {
        return _this.deleteSelected();
      });
      this.buttonMarkAsRead.click(function() {
        return _this.markSelected(true);
      });
      this.buttonMarkAsUnread.click(function() {
        return _this.markSelected(false);
      });
      this.allCheckboxes.click(function() {
        return _this.checkboxClicked();
      });
      return this.enquiryReplyForm.submit(function(e) {
        return _this.sendReply(e);
      });
    };

    Enquiries.prototype.selectAllClicked = function() {
      if (this.checkboxSelectAll.prop('checked')) {
        return this.selectAllCheckboxes();
      } else {
        return this.unselectAllCheckboxes();
      }
    };

    Enquiries.prototype.checkboxClicked = function() {
      if (this.allCheckboxes.not(':checked').length) {
        return this.checkboxSelectAll.prop("checked", false);
      } else {
        return this.checkboxSelectAll.prop("checked", true);
      }
    };

    Enquiries.prototype.selectAllCheckboxes = function() {
      return this.allCheckboxes.prop('checked', true);
    };

    Enquiries.prototype.unselectAllCheckboxes = function() {
      return this.allCheckboxes.prop('checked', false);
    };

    Enquiries.prototype.deleteSelected = function() {
      var _this = this;
      return this.checkedCheckboxes().each(function(idx, checkbox) {
        var id;
        id = $(checkbox).data('id');
        $(checkbox).closest('tr').fadeOut(500);
        return $.ajax({
          type: "delete",
          url: "/admin/enquiries/" + id,
          success: function() {
            return console.log("Deleted!");
          },
          error: function() {
            return console.log("Problem :(");
          }
        });
      });
    };

    Enquiries.prototype.markSelected = function(viewed) {
      var _this = this;
      return this.checkedCheckboxes().each(function(idx, checkbox) {
        var id;
        id = $(checkbox).data('id');
        if (viewed) {
          $(checkbox).closest('tr').removeClass('info');
        } else {
          $(checkbox).closest('tr').addClass('info');
        }
        _this.unselectAllCheckboxes();
        _this.checkboxSelectAll.prop('checked', false);
        return $.ajax({
          type: "put",
          url: "/admin/enquiries/" + id,
          data: {
            viewed: viewed
          },
          success: function(data) {
            return console.log("Success!");
          },
          error: function() {
            return console.log("There was a problem updating the record(s)");
          }
        });
      });
    };

    Enquiries.prototype.checkedCheckboxes = function() {
      return $("input[name='enquiry[]']:checked");
    };

    Enquiries.prototype.sendReply = function(e) {
      var data,
        _this = this;
      this.showSending();
      data = this.enquiryReplyForm.serialize();
      $.ajax({
        type: "POST",
        url: "/admin/enquiries/reply",
        data: data,
        success: function(data) {
          return _this.showSendSuccess();
        }
      });
      return e.preventDefault();
    };

    Enquiries.prototype.showSending = function() {
      var btn;
      btn = this.enquiryReplyForm.find('input:submit');
      return btn.attr('disabled', 'disabled').val("Sending");
    };

    Enquiries.prototype.showSendSuccess = function() {
      var btn;
      btn = this.enquiryReplyForm.find('input:submit');
      return btn.addClass('btn-success').val("Sent!");
    };

    return Enquiries;

  })();

  Faqs = (function() {
    function Faqs() {
      this.form = $('#faq-form');
      this.spinner = $('.fa-spinner');
      this.bindEvents();
    }

    Faqs.prototype.bindEvents = function() {
      var _this = this;
      $("#sortable").sortable({
        helper: this.fixHelperModified,
        axis: "y"
      });
      $("#sortable").on("sortupdate", function(event, ui) {
        return _this.updateSortOrder();
      });
      return $("#sortable").disableSelection();
    };

    Faqs.prototype.updateSortOrder = function($elem) {
      var sort_order,
        _this = this;
      this.displayUpdateSort($('#success'));
      sort_order = $('#sortable').sortable("serialize");
      return $.ajax({
        type: "post",
        url: "/admin/faqs/sort",
        data: sort_order,
        success: function() {
          return _this.displayUpdateSuccess($('#success'));
        }
      });
    };

    Faqs.prototype.displayUpdateSort = function($placeholderDiv) {
      return $placeholderDiv.fadeIn(500).html("<i class=\"fa fa-cog fa-spin\"></i> Updating the order");
    };

    Faqs.prototype.displayUpdateSuccess = function($placeholderDiv) {
      return $placeholderDiv.delay(2000).html("<strong>Success:</strong> New order of sectors saved successfully!").delay(1000).fadeOut(500);
    };

    Faqs.prototype.fixHelperModified = function(e, tr) {
      var $helper, $originals;
      $originals = tr.children();
      $helper = tr.clone();
      $helper.children().each(function(index) {
        return $(this).width($originals.eq(index).width()).css("background-color", "#9cf").css("border-bottom", "1px solid #dddddd");
      });
      return $helper;
    };

    return Faqs;

  })();

  Restfulizer = (function() {
    function Restfulizer() {
      var _this = this;
      this.buildForm();
      $('.delete-resource').submit(function() {
        return _this.displayDeleteConfirmation();
      });
    }

    Restfulizer.prototype.buildForm = function() {
      $('[data-method]').append(function() {
        return "<form action=\"" + ($(this).attr('href')) + "\" method=\"POST\" style=\"display:none\" class=\"delete-resource\">\n\n   <input type=\"hidden\" name=\"_method\" value=\"" + ($(this).attr('data-method')) + "\">\n\n</form>\n";
      });
      return $('[data-method]').removeAttr('href').attr('style', 'cursor:pointer;').attr('onclick', '$(this).find("form").submit();');
    };

    Restfulizer.prototype.displayDeleteConfirmation = function() {
      return confirm("Are you sure you want to delete this item?");
    };

    return Restfulizer;

  })();

  Settings = (function() {
    function Settings() {
      this.form = $("#edit-setting-form");
      this.bindEvents();
    }

    Settings.prototype.bindEvents = function() {
      var _this = this;
      return this.form.submit(function(e) {
        return _this.submitForm(e);
      });
    };

    Settings.prototype.submitForm = function(e) {
      var btn, spinner;
      btn = this.form.find('button[type=submit]');
      spinner = btn.find('i');
      spinner.show();
      $.ajax({
        type: "put",
        url: this.form.attr('action'),
        data: this.form.serialize(),
        success: function() {
          console.log(spinner);
          return spinner.delay(300).hide(function() {
            return btn.html("Updated!").addClass('btn-success disabled');
          });
        }
      });
      return e.preventDefault();
    };

    return Settings;

  })();

}).call(this);
