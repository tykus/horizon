// Generated by CoffeeScript 1.6.3
(function() {
  var App, ContactForm, Cookie, CookieNotice, Faqs, GoogleMapCanvas;

  App = (function() {
    function App() {
      if ($('#map-canvas').length) {
        new GoogleMapCanvas();
      }
      if ($('#contact-form').length) {
        new ContactForm($('#contact-form'));
      }
      if ($('#faqs').length) {
        new Faqs;
      }
      if ($('#cookies-notice').length) {
        new CookieNotice;
      }
      this.bindEvents();
    }

    App.prototype.bindEvents = function() {
      var _this = this;
      $('a[href*=#]:not([href=#])').click(function(e) {
        return _this.smoothScroll(e);
      });
      $(window).scroll(function(e) {
        return _this.displayBackToTop(e);
      });
      $(window).scroll(function(e) {
        return _this.introParallax(e);
      });
      $('.navbar-brand').click(function(e) {
        return _this.backToTop(e);
      });
      return $('.back-to-top').click(function(e) {
        return _this.backToTop(e);
      });
    };

    App.prototype.introParallax = function(e) {
      var currentPosition, speed;
      speed = 10.0;
      currentPosition = (-window.pageYOffset / speed) + "px";
      return $('.intro-header').css('background-position-y', currentPosition);
    };

    App.prototype.backToTop = function(e) {
      e.preventDefault();
      $('html, body').animate({
        scrollTop: 0
      }, 1000);
      return false;
    };

    App.prototype.displayBackToTop = function(e) {
      if ($(e.target).scrollTop() > 300) {
        return $('.back-to-top').fadeIn(500);
      } else {
        return $('.back-to-top').fadeOut(500);
      }
    };

    App.prototype.smoothScroll = function(e) {
      var elem, target;
      elem = e.target;
      if (location.pathname.replace(/^\//, '') === elem.pathname.replace(/^\//, '') && location.hostname === elem.hostname) {
        target = $(elem.hash);
        if (!target.length) {
          target = $("[name=" + (this.hash.slice(1)) + "]");
        }
        $('html,body').animate({
          scrollTop: target.offset().top - 80
        }, 1000);
        return false;
      }
    };

    return App;

  })();

  $(function() {
    if ($("#horizon").length) {
      return new App;
    }
  });

  ContactForm = (function() {
    function ContactForm() {
      this.getJQueryObjects();
      this.bindEvents();
    }

    ContactForm.prototype.getJQueryObjects = function() {
      this.contactForm = $("#contact-form");
      this.formURL = this.contactForm.attr("action");
      this.submitButton = this.contactForm.find("button[type=submit]");
      this.name = $('input[name=name]');
      this.email = $('input[name=email]');
      this.telephone = $('input[name=telephone]');
      this.message = $('textarea[name=message]');
      this.alert = $('.alert');
      this.alert_message = $('span#message');
      return this.spinner = $("#spinner");
    };

    ContactForm.prototype.bindEvents = function() {
      var _this = this;
      this.contactForm.submit(function(e) {
        return _this.submitForm(e);
      });
      this.name.blur(function() {
        return _this.checkName();
      });
      this.email.blur(function() {
        return _this.checkEmail();
      });
      this.telephone.blur(function() {
        return _this.checkTelephone();
      });
      this.name.focus(function() {
        return _this.removeFieldError(_this.name);
      });
      this.email.focus(function() {
        return _this.removeFieldError(_this.email);
      });
      return this.telephone.focus(function() {
        return _this.removeFieldError(_this.telephone);
      });
    };

    ContactForm.prototype.submitForm = function(e) {
      var failure_message, formData,
        _this = this;
      e.preventDefault();
      failure_message = "Your enquiry was not sent";
      this.alert.addClass('alert-info').show();
      if (this.validate()) {
        formData = this.contactForm.serialize();
        this.showSpinner();
        return $.ajax({
          url: this.formURL,
          type: "POST",
          data: formData,
          success: function(data, textStatus, jqXHR) {
            _this.hideSpinner();
            return _this.markSubmitSuccess(data.message);
          },
          error: function(jqXHR, textStatus, errorThrown) {
            _this.hideSpinner();
            return _this.markSubmitError(failure_message);
          }
        });
      } else {
        this.alert_message.text(failure_message);
        return this.alert.addClass('alert-warning').fadeIn(500);
      }
    };

    ContactForm.prototype.validate = function() {
      var ok;
      ok = true;
      ok = this.checkName() && ok;
      ok = this.checkEmail() && ok;
      ok = this.checkTelephone() && ok;
      return ok;
    };

    ContactForm.prototype.checkName = function() {
      var nameRegex;
      nameRegex = new RegExp(/^.{1,30}$/);
      return this.validateField(this.name, nameRegex);
    };

    ContactForm.prototype.checkEmail = function() {
      var emailRegex;
      emailRegex = new RegExp(/^([a-zA-Z0-9_\-])([a-zA-Z0-9_\-\.]*)@(\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}|((([a-zA-Z0-9\-\_]+)\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\])$/);
      return this.validateField(this.email, emailRegex);
    };

    ContactForm.prototype.checkTelephone = function() {
      var phoneRegex;
      phoneRegex = new RegExp(/^\({0,1}\d{2,4}\){0,1}[-]{0,1}\s{0,1}\d{5,7}$/);
      return this.validateField(this.telephone, phoneRegex);
    };

    ContactForm.prototype.validateField = function(field, regexp) {
      var ok, val;
      val = field.val();
      ok = regexp.test(val);
      if (ok) {
        this.removeFieldError(field);
      } else {
        this.markFieldError(field);
      }
      return ok;
    };

    ContactForm.prototype.showSpinner = function() {
      return this.spinner.removeClass("hidden");
    };

    ContactForm.prototype.hideSpinner = function() {
      return this.spinner.addClass("hidden");
    };

    ContactForm.prototype.markSubmitSuccess = function(message) {
      this.resetAlert();
      this.alert_message.text(message);
      this.alert.addClass('alert-success').fadeIn(500);
      this.contactForm[0].reset();
      return this.hideAlert();
    };

    ContactForm.prototype.markSubmitError = function(message) {
      this.resetAlert();
      this.alert_message.text(message);
      return this.alert.addClass('alert-warning').fadeIn(500);
    };

    ContactForm.prototype.resetAlert = function() {
      this.alert.removeClass('alert-success').removeClass('alert-info').removeClass('alert-warning');
      return this.alert_message.text('');
    };

    ContactForm.prototype.markFieldError = function(elem) {
      return elem.addClass('form-error');
    };

    ContactForm.prototype.removeFieldError = function(elem) {
      return elem.removeClass('form-error');
    };

    ContactForm.prototype.hideAlert = function() {
      var _this = this;
      return this.alert.delay(2000).fadeOut(1000, function() {
        return _this.resetAlert();
      });
    };

    return ContactForm;

  })();

  Cookie = (function() {
    function Cookie() {}

    Cookie.set = function(name, value, days) {
      var date, expires;
      if (days) {
        date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toGMTString();
      } else {
        expires = "";
      }
      return document.cookie = name + "=" + value + expires + "; path=/";
    };

    Cookie.get = function(name) {
      var c, ca, i, nameEQ;
      nameEQ = name + "=";
      ca = document.cookie.split(";");
      i = 0;
      while (i < ca.length) {
        c = ca[i];
        while (c.charAt(0) === " ") {
          c = c.substring(1, c.length);
        }
        if (c.indexOf(nameEQ) === 0) {
          return c.substring(nameEQ.length, c.length);
        }
        i++;
      }
      return null;
    };

    Cookie["delete"] = function(name) {
      return set(name, "", -1);
    };

    return Cookie;

  })();

  CookieNotice = (function() {
    function CookieNotice() {
      this.notice = $("#cookies-notice");
      this.button = this.notice.find('.btn');
      this.acknowledged = Cookie.get('acknowledge');
      this.showNotice();
      this.bindEvents();
    }

    CookieNotice.prototype.bindEvents = function() {
      var _this = this;
      this.button.click(function(e) {
        return _this.acknowledgeNotice();
      });
      return $(window).scroll(function(e) {
        if ($(e.target).scrollTop() > 200) {
          return _this.hideNotice();
        } else {
          return _this.showNotice();
        }
      });
    };

    CookieNotice.prototype.acknowledgeNotice = function() {
      this.hideNotice();
      return Cookie.set('acknowledge', 'true', 60);
    };

    CookieNotice.prototype.showNotice = function() {
      if (!((this.acknowledged != null) && this.acknowledged === "true")) {
        return this.notice.show();
      }
    };

    CookieNotice.prototype.hideNotice = function() {
      return this.notice.fadeOut(500);
    };

    return CookieNotice;

  })();

  Faqs = (function() {
    function Faqs() {
      this.bindEvents();
    }

    Faqs.prototype.bindEvents = function() {
      var _this = this;
      $('.list-group-item').on('click', function(e) {
        return _this.highlightSelected(e);
      });
      return $(window).scroll(function() {
        if ($(window).scrollTop() === 0) {
          return _this.resetColors();
        }
      });
    };

    Faqs.prototype.highlightSelected = function(e) {
      var anchor;
      anchor = $(e.target).attr('href');
      return this.changeColors(anchor, '#0bd7ff');
    };

    Faqs.prototype.changeColors = function(elem, hex) {
      return $(elem).find('.panel').css('border-color', hex).find('.panel-heading').css('background-color', hex).css('border-color', hex);
    };

    Faqs.prototype.resetColors = function() {
      var _this = this;
      return $('.panel-wrapper').each(function(index, item) {
        return _this.changeColors(item, "#1866ff");
      });
    };

    return Faqs;

  })();

  GoogleMapCanvas = (function() {
    function GoogleMapCanvas() {
      this.business = window.map_info;
      if (typeof google !== "undefined" && google !== null) {
        this.buildMap();
        this.bindEvents();
      } else {
        console.log("No Google, are you in China?");
      }
    }

    GoogleMapCanvas.prototype.bindEvents = function() {
      var _this = this;
      return google.maps.event.addListener(this.marker, 'click', function() {
        return _this.infoWindow.open(_this.map, _this.marker);
      });
    };

    GoogleMapCanvas.prototype.buildMap = function() {
      var latitude, longitude, mapOptions, _ref;
      _ref = this.business.location.split(","), longitude = _ref[0], latitude = _ref[1];
      this.horizon = new google.maps.LatLng(longitude, latitude);
      mapOptions = {
        zoom: 16,
        scrollwheel: false,
        streetViewControl: false,
        center: this.horizon,
        panControl: false,
        zoomControl: true,
        scaleControl: true
      };
      this.map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
      return this.placeMarker();
    };

    GoogleMapCanvas.prototype.placeMarker = function() {
      var content;
      content = "<img src=\"/img/logo_small.png\"><br>\n" + this.business.address + "<br>\n" + this.business.phone + "<br>\n<a href=\"mailto:" + this.business.email + "\">" + this.business.email + "</a>";
      this.infoWindow = new google.maps.InfoWindow({
        content: content
      });
      return this.marker = new google.maps.Marker({
        position: this.horizon,
        map: this.map,
        title: this.business.name
      });
    };

    return GoogleMapCanvas;

  })();

}).call(this);
